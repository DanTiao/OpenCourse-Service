<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cc.open.dao.CourseMapper">
  <resultMap id="BaseResultMap" type="com.cc.open.domain.Course">
    <id column="course_uuid" jdbcType="VARCHAR" property="courseUuid" />
    <result column="course_num" jdbcType="VARCHAR" property="courseNum" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="course_credit" jdbcType="VARCHAR" property="courseCredit" />
    <result column="course_hour" jdbcType="VARCHAR" property="courseHour" />
    <result column="start_date" jdbcType="DATE" property="startDate" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="academy_id" jdbcType="VARCHAR" property="academyId" />
    <result column="is_enable" jdbcType="VARCHAR" property="isEnable" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
  </resultMap>
  <sql id="ResultBase">
  	course_uuid AS courseId,
    course_num AS courseNum,
    course_name AS courseName,
    course_credit AS courseCredit,
    course_hour AS courseHour,
    start_date AS startDate,
    creat_time AS creatTime,
    academy_id AS academyId,
    is_enable AS isEnable,
    user_id AS userId
  </sql>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    course_uuid, course_num, course_name, course_credit, course_hour, start_date, creat_time, 
    academy_id, is_enable, user_id
  </sql>
  <select id="selectByExample" parameterType="com.cc.open.domain.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_course_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_course_info
    where course_uuid = #{courseUuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_course_info
    where course_uuid = #{courseUuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cc.open.domain.CourseExample">
    delete from t_course_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cc.open.domain.Course">
    insert into t_course_info (course_uuid, course_num, course_name, 
      course_credit, course_hour, start_date, 
      creat_time, academy_id, is_enable, 
      user_id)
    values (#{courseUuid,jdbcType=VARCHAR}, #{courseNum,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, 
      #{courseCredit,jdbcType=VARCHAR}, #{courseHour,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE}, 
      #{creatTime,jdbcType=TIMESTAMP}, #{academyId,jdbcType=VARCHAR}, #{isEnable,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cc.open.domain.Course">
    insert into t_course_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseUuid != null">
        course_uuid,
      </if>
      <if test="courseNum != null">
        course_num,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="courseCredit != null">
        course_credit,
      </if>
      <if test="courseHour != null">
        course_hour,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="academyId != null">
        academy_id,
      </if>
      <if test="isEnable != null">
        is_enable,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseUuid != null">
        #{courseUuid,jdbcType=VARCHAR},
      </if>
      <if test="courseNum != null">
        #{courseNum,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseCredit != null">
        #{courseCredit,jdbcType=VARCHAR},
      </if>
      <if test="courseHour != null">
        #{courseHour,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="academyId != null">
        #{academyId,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        #{isEnable,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cc.open.domain.CourseExample" resultType="java.lang.Long">
    select count(*) from t_course_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_course_info
    <set>
      <if test="record.courseUuid != null">
        course_uuid = #{record.courseUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.courseNum != null">
        course_num = #{record.courseNum,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseCredit != null">
        course_credit = #{record.courseCredit,jdbcType=VARCHAR},
      </if>
      <if test="record.courseHour != null">
        course_hour = #{record.courseHour,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.creatTime != null">
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.academyId != null">
        academy_id = #{record.academyId,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnable != null">
        is_enable = #{record.isEnable,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_course_info
    set course_uuid = #{record.courseUuid,jdbcType=VARCHAR},
      course_num = #{record.courseNum,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      course_credit = #{record.courseCredit,jdbcType=VARCHAR},
      course_hour = #{record.courseHour,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=DATE},
      creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      academy_id = #{record.academyId,jdbcType=VARCHAR},
      is_enable = #{record.isEnable,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cc.open.domain.Course">
    update t_course_info
    <set>
      <if test="courseNum != null">
        course_num = #{courseNum,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseCredit != null">
        course_credit = #{courseCredit,jdbcType=VARCHAR},
      </if>
      <if test="courseHour != null">
        course_hour = #{courseHour,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="academyId != null">
        academy_id = #{academyId,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        is_enable = #{isEnable,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
    </set>
    where course_uuid = #{courseUuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cc.open.domain.Course">
    update t_course_info
    set course_num = #{courseNum,jdbcType=VARCHAR},
      course_name = #{courseName,jdbcType=VARCHAR},
      course_credit = #{courseCredit,jdbcType=VARCHAR},
      course_hour = #{courseHour,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=DATE},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      academy_id = #{academyId,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR}
    where course_uuid = #{courseUuid,jdbcType=VARCHAR}
  </update>
  
  <select id="findCourseByName" resultType="com.cc.open.vo.CourseVO">
  	SELECT
  	<include refid="ResultBase"></include>
  	FROM t_course_info
  	WHERE 1=1
  	<if test="courseVO.courseId != null">
  		AND course_uuid = #{courseVO.courseId,jdbcType=VARCHAR}
  	</if>
  	<if test="courseVO.courseName != null">
  		AND course_name = #{courseVO.courseName,jdbcType=VARCHAR}
  	</if>
  </select>
  
  <select id="findCourseByParam" resultType="com.cc.open.vo.CourseVO">
  	SELECT
  	  c.course_uuid AS courseId,
      c.course_num AS courseNum,
      c.course_name AS courseName,
      c.course_credit AS courseCredit,
      c.course_hour AS courseHour,
      c.start_date AS startDate,
      c.creat_time AS createTime,
      c.academy_id AS academyId,
      a.academy_name AS academyName,
      c.is_enable AS isEnable,
      c.user_id AS userId
    FROM t_course_info c,t_academy a
    WHERE c.academy_id = a.academy_id AND  c.is_enable = #{data.isEnable,jdbcType=VARCHAR}
    <if test="data.academyId != null">
    	AND c.academy_id = #{data.academyId,jdbcType=VARCHAR}
    </if>
    <if test="data.courseName != null">
    	AND c.course_name = #{data.courseName,jdbcType=VARCHAR}
    </if>
    <if test="data.start != null">
    	AND c.start_date &gt;= #{data.start,jdbcType=VARCHAR}
    </if>
    <if test="data.end != null">
    	AND c.start_date &lt;= #{data.end,jdbcType=VARCHAR}
    </if>
  </select>
  
  <insert id="createCourse" parameterType="com.cc.open.vo.CourseVO">
  	INSERT INTO t_course_info (course_uuid, course_num, course_name, 
      course_credit, course_hour, start_date, 
      creat_time, academy_id, is_enable, 
      user_id)
    values (#{courseId,jdbcType=VARCHAR}, #{courseNum,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, 
      #{courseCredit,jdbcType=VARCHAR}, #{courseHour,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE}, 
      #{createTime,jdbcType=TIMESTAMP}, #{academyId,jdbcType=VARCHAR}, #{isEnable,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR})
  </insert>
  
  <select id="findAllCourse" resultType="com.cc.open.vo.CourseVO">
  	SELECT
  	  c.course_uuid AS courseId,
      c.course_num AS courseNum,
      c.course_name AS courseName,
      c.course_credit AS courseCredit,
      c.course_hour AS courseHour,
      c.start_date AS startDate,
      c.creat_time AS createTime,
      c.academy_id AS academyId,
      a.academy_name AS academyName,
      c.is_enable AS isEnable,
      c.user_id AS userId
    FROM t_course_info c,t_academy a
    WHERE c.academy_id = a.academy_id AND c.is_enable = #{isEnable,jdbcType=VARCHAR}
  </select>
  
  <update id="deleteCourseLogically" parameterType="java.util.List">
  	UPDATE t_course_info
  	set  is_enable = '0'
    where course_uuid in
    <foreach collection="list" index="index" item="item" 
        separator="," open="(" close=")">
        #{item,jdbcType=BIGINT}
    </foreach>
  </update>
  
  <update id="restCourseLogically" parameterType="java.util.List">
  	UPDATE t_course_info
  	set  is_enable = '1'
    where course_uuid in
    <foreach collection="list" index="index" item="item" 
        separator="," open="(" close=")">
        #{item,jdbcType=BIGINT}
    </foreach>
  </update>
  
  <delete id="deleteCourseByIds" parameterType="java.util.List">
  	DELETE FROM t_course_info
  	WHERE course_uuid IN
  	<foreach collection="list" index="index" item="item" 
        separator="," open="(" close=")">
        #{item,jdbcType=BIGINT}
    </foreach>
  </delete>
  
  <update id="updateCourse" parameterType="com.cc.open.vo.CourseVO">
  	UPDATE t_course_info
  	<set>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseCredit != null">
        course_credit = #{courseCredit,jdbcType=VARCHAR},
      </if>
      <if test="courseHour != null">
        course_hour = #{courseHour,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="academyId != null">
        academy_id = #{academyId,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        is_enable = #{isEnable,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
    </set>
    <where>
    	<if test="courseId != null">
            course_uuid = #{courseId,jdbcType=VARCHAR}
      	</if>
      	<if test="courseNum != null">
           AND course_num = #{courseNum,jdbcType=VARCHAR}
      	</if>
    </where>
  </update>
  <select id="findAllPersonalCourse" resultType="com.cc.open.vo.CourseVO">
  SELECT
	c.course_uuid AS courseId,
	c.course_num AS courseNum,
	c.course_name AS courseName,
	c.course_credit AS courseCredit,
	c.course_hour AS courseHour,
	c.start_date AS startDate,
	c.creat_time AS createTime,
	c.academy_id AS academyId,
	a.academy_name AS academyName,
	c.is_enable AS isEnable,
	c.user_id AS userId
FROM
	t_course_info c,
	t_academy a,
	t_user_course b
WHERE
	c.academy_id = a.academy_id
AND c.is_enable = #{course.isEnable,jdbcType=VARCHAR}
AND course_uuid IN (
	SELECT
		course_id
	WHERE
		b.user_id = #{course.userId,jdbcType=VARCHAR}
)
  </select>
</mapper>