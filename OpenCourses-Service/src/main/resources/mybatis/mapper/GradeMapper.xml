<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cc.open.dao.GradeMapper">
  <resultMap id="BaseResultMap" type="com.cc.open.domain.Grade">
    <id column="grade_uuid" jdbcType="VARCHAR" property="gradeUuid" />
    <result column="school_year" jdbcType="VARCHAR" property="schoolYear" />
    <result column="course_num" jdbcType="VARCHAR" property="courseNum" />
    <result column="teacher_account" jdbcType="VARCHAR" property="teacherAccount" />
    <result column="stu_id" jdbcType="BIGINT" property="stuId" />
    <result column="ordinary_grades" jdbcType="REAL" property="ordinaryGrades" />
    <result column="mid_grades" jdbcType="REAL" property="midGrades" />
    <result column="final_grades" jdbcType="REAL" property="finalGrades" />
    <result column="homework_grades" jdbcType="REAL" property="homeworkGrades" />
    <result column="overall_grades" jdbcType="REAL" property="overallGrades" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    grade_uuid, school_year, course_num, teacher_account, stu_id, ordinary_grades, mid_grades, 
    final_grades, homework_grades, overall_grades
  </sql>
  <select id="selectByExample" parameterType="com.cc.open.domain.GradeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_grade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_grade
    where grade_uuid = #{gradeUuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_grade
    where grade_uuid = #{gradeUuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cc.open.domain.GradeExample">
    delete from t_grade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cc.open.domain.Grade">
    insert into t_grade (grade_uuid, school_year, course_num, 
      teacher_account, stu_id, ordinary_grades, 
      mid_grades, final_grades, homework_grades, 
      overall_grades)
    values (#{gradeUuid,jdbcType=VARCHAR}, #{schoolYear,jdbcType=VARCHAR}, #{courseNum,jdbcType=VARCHAR}, 
      #{teacherAccount,jdbcType=VARCHAR}, #{stuId,jdbcType=BIGINT}, #{ordinaryGrades,jdbcType=REAL}, 
      #{midGrades,jdbcType=REAL}, #{finalGrades,jdbcType=REAL}, #{homeworkGrades,jdbcType=REAL}, 
      #{overallGrades,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.cc.open.domain.Grade">
    insert into t_grade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gradeUuid != null">
        grade_uuid,
      </if>
      <if test="schoolYear != null">
        school_year,
      </if>
      <if test="courseNum != null">
        course_num,
      </if>
      <if test="teacherAccount != null">
        teacher_account,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="ordinaryGrades != null">
        ordinary_grades,
      </if>
      <if test="midGrades != null">
        mid_grades,
      </if>
      <if test="finalGrades != null">
        final_grades,
      </if>
      <if test="homeworkGrades != null">
        homework_grades,
      </if>
      <if test="overallGrades != null">
        overall_grades,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gradeUuid != null">
        #{gradeUuid,jdbcType=VARCHAR},
      </if>
      <if test="schoolYear != null">
        #{schoolYear,jdbcType=VARCHAR},
      </if>
      <if test="courseNum != null">
        #{courseNum,jdbcType=VARCHAR},
      </if>
      <if test="teacherAccount != null">
        #{teacherAccount,jdbcType=VARCHAR},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=BIGINT},
      </if>
      <if test="ordinaryGrades != null">
        #{ordinaryGrades,jdbcType=REAL},
      </if>
      <if test="midGrades != null">
        #{midGrades,jdbcType=REAL},
      </if>
      <if test="finalGrades != null">
        #{finalGrades,jdbcType=REAL},
      </if>
      <if test="homeworkGrades != null">
        #{homeworkGrades,jdbcType=REAL},
      </if>
      <if test="overallGrades != null">
        #{overallGrades,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cc.open.domain.GradeExample" resultType="java.lang.Long">
    select count(*) from t_grade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_grade
    <set>
      <if test="record.gradeUuid != null">
        grade_uuid = #{record.gradeUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolYear != null">
        school_year = #{record.schoolYear,jdbcType=VARCHAR},
      </if>
      <if test="record.courseNum != null">
        course_num = #{record.courseNum,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherAccount != null">
        teacher_account = #{record.teacherAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=BIGINT},
      </if>
      <if test="record.ordinaryGrades != null">
        ordinary_grades = #{record.ordinaryGrades,jdbcType=REAL},
      </if>
      <if test="record.midGrades != null">
        mid_grades = #{record.midGrades,jdbcType=REAL},
      </if>
      <if test="record.finalGrades != null">
        final_grades = #{record.finalGrades,jdbcType=REAL},
      </if>
      <if test="record.homeworkGrades != null">
        homework_grades = #{record.homeworkGrades,jdbcType=REAL},
      </if>
      <if test="record.overallGrades != null">
        overall_grades = #{record.overallGrades,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_grade
    set grade_uuid = #{record.gradeUuid,jdbcType=VARCHAR},
      school_year = #{record.schoolYear,jdbcType=VARCHAR},
      course_num = #{record.courseNum,jdbcType=VARCHAR},
      teacher_account = #{record.teacherAccount,jdbcType=VARCHAR},
      stu_id = #{record.stuId,jdbcType=BIGINT},
      ordinary_grades = #{record.ordinaryGrades,jdbcType=REAL},
      mid_grades = #{record.midGrades,jdbcType=REAL},
      final_grades = #{record.finalGrades,jdbcType=REAL},
      homework_grades = #{record.homeworkGrades,jdbcType=REAL},
      overall_grades = #{record.overallGrades,jdbcType=REAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cc.open.domain.Grade">
    update t_grade
    <set>
      <if test="schoolYear != null">
        school_year = #{schoolYear,jdbcType=VARCHAR},
      </if>
      <if test="courseNum != null">
        course_num = #{courseNum,jdbcType=VARCHAR},
      </if>
      <if test="teacherAccount != null">
        teacher_account = #{teacherAccount,jdbcType=VARCHAR},
      </if>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=BIGINT},
      </if>
      <if test="ordinaryGrades != null">
        ordinary_grades = #{ordinaryGrades,jdbcType=REAL},
      </if>
      <if test="midGrades != null">
        mid_grades = #{midGrades,jdbcType=REAL},
      </if>
      <if test="finalGrades != null">
        final_grades = #{finalGrades,jdbcType=REAL},
      </if>
      <if test="homeworkGrades != null">
        homework_grades = #{homeworkGrades,jdbcType=REAL},
      </if>
      <if test="overallGrades != null">
        overall_grades = #{overallGrades,jdbcType=REAL},
      </if>
    </set>
    where grade_uuid = #{gradeUuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cc.open.domain.Grade">
    update t_grade
    set school_year = #{schoolYear,jdbcType=VARCHAR},
      course_num = #{courseNum,jdbcType=VARCHAR},
      teacher_account = #{teacherAccount,jdbcType=VARCHAR},
      stu_id = #{stuId,jdbcType=BIGINT},
      ordinary_grades = #{ordinaryGrades,jdbcType=REAL},
      mid_grades = #{midGrades,jdbcType=REAL},
      final_grades = #{finalGrades,jdbcType=REAL},
      homework_grades = #{homeworkGrades,jdbcType=REAL},
      overall_grades = #{overallGrades,jdbcType=REAL}
    where grade_uuid = #{gradeUuid,jdbcType=VARCHAR}
  </update>
</mapper>