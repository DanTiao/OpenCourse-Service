<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cc.open.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.cc.open.domain.Teacher">
    <id column="teacher_uuid" jdbcType="VARCHAR" property="teacherUuid" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="teacher_sex" jdbcType="VARCHAR" property="teacherSex" />
    <result column="teacher_birthday" jdbcType="TIMESTAMP" property="teacherBirthday" />
    <result column="teacher_education" jdbcType="VARCHAR" property="teacherEducation" />
    <result column="teacher_degree" jdbcType="VARCHAR" property="teacherDegree" />
    <result column="teacher_major" jdbcType="VARCHAR" property="teacherMajor" />
    <result column="teacher_title" jdbcType="VARCHAR" property="teacherTitle" />
    <result column="academy_id" jdbcType="VARCHAR" property="academyId" />
    <result column="teacher_introduction" jdbcType="VARCHAR" property="teacherIntroduction" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    teacher_uuid, user_id, teacher_sex, teacher_birthday, teacher_education, teacher_degree, 
    teacher_major, teacher_title, academy_id, teacher_introduction
  </sql>
  <select id="selectByExample" parameterType="com.cc.open.domain.TeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_teacher
    where teacher_uuid = #{teacherUuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_teacher
    where teacher_uuid = #{teacherUuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cc.open.domain.TeacherExample">
    delete from t_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cc.open.domain.Teacher">
    insert into t_teacher (teacher_uuid, user_id, teacher_sex, 
      teacher_birthday, teacher_education, teacher_degree, 
      teacher_major, teacher_title, academy_id, 
      teacher_introduction)
    values (#{teacherUuid,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{teacherSex,jdbcType=VARCHAR}, 
      #{teacherBirthday,jdbcType=TIMESTAMP}, #{teacherEducation,jdbcType=VARCHAR}, #{teacherDegree,jdbcType=VARCHAR}, 
      #{teacherMajor,jdbcType=VARCHAR}, #{teacherTitle,jdbcType=VARCHAR}, #{academyId,jdbcType=VARCHAR}, 
      #{teacherIntroduction,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cc.open.domain.Teacher">
    insert into t_teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teacherUuid != null">
        teacher_uuid,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="teacherSex != null">
        teacher_sex,
      </if>
      <if test="teacherBirthday != null">
        teacher_birthday,
      </if>
      <if test="teacherEducation != null">
        teacher_education,
      </if>
      <if test="teacherDegree != null">
        teacher_degree,
      </if>
      <if test="teacherMajor != null">
        teacher_major,
      </if>
      <if test="teacherTitle != null">
        teacher_title,
      </if>
      <if test="academyId != null">
        academy_id,
      </if>
      <if test="teacherIntroduction != null">
        teacher_introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teacherUuid != null">
        #{teacherUuid,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="teacherSex != null">
        #{teacherSex,jdbcType=VARCHAR},
      </if>
      <if test="teacherBirthday != null">
        #{teacherBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="teacherEducation != null">
        #{teacherEducation,jdbcType=VARCHAR},
      </if>
      <if test="teacherDegree != null">
        #{teacherDegree,jdbcType=VARCHAR},
      </if>
      <if test="teacherMajor != null">
        #{teacherMajor,jdbcType=VARCHAR},
      </if>
      <if test="teacherTitle != null">
        #{teacherTitle,jdbcType=VARCHAR},
      </if>
      <if test="academyId != null">
        #{academyId,jdbcType=VARCHAR},
      </if>
      <if test="teacherIntroduction != null">
        #{teacherIntroduction,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cc.open.domain.TeacherExample" resultType="java.lang.Long">
    select count(*) from t_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_teacher
    <set>
      <if test="record.teacherUuid != null">
        teacher_uuid = #{record.teacherUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherSex != null">
        teacher_sex = #{record.teacherSex,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherBirthday != null">
        teacher_birthday = #{record.teacherBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.teacherEducation != null">
        teacher_education = #{record.teacherEducation,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherDegree != null">
        teacher_degree = #{record.teacherDegree,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherMajor != null">
        teacher_major = #{record.teacherMajor,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherTitle != null">
        teacher_title = #{record.teacherTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.academyId != null">
        academy_id = #{record.academyId,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherIntroduction != null">
        teacher_introduction = #{record.teacherIntroduction,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_teacher
    set teacher_uuid = #{record.teacherUuid,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      teacher_sex = #{record.teacherSex,jdbcType=VARCHAR},
      teacher_birthday = #{record.teacherBirthday,jdbcType=TIMESTAMP},
      teacher_education = #{record.teacherEducation,jdbcType=VARCHAR},
      teacher_degree = #{record.teacherDegree,jdbcType=VARCHAR},
      teacher_major = #{record.teacherMajor,jdbcType=VARCHAR},
      teacher_title = #{record.teacherTitle,jdbcType=VARCHAR},
      academy_id = #{record.academyId,jdbcType=VARCHAR},
      teacher_introduction = #{record.teacherIntroduction,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cc.open.domain.Teacher">
    update t_teacher
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="teacherSex != null">
        teacher_sex = #{teacherSex,jdbcType=VARCHAR},
      </if>
      <if test="teacherBirthday != null">
        teacher_birthday = #{teacherBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="teacherEducation != null">
        teacher_education = #{teacherEducation,jdbcType=VARCHAR},
      </if>
      <if test="teacherDegree != null">
        teacher_degree = #{teacherDegree,jdbcType=VARCHAR},
      </if>
      <if test="teacherMajor != null">
        teacher_major = #{teacherMajor,jdbcType=VARCHAR},
      </if>
      <if test="teacherTitle != null">
        teacher_title = #{teacherTitle,jdbcType=VARCHAR},
      </if>
      <if test="academyId != null">
        academy_id = #{academyId,jdbcType=VARCHAR},
      </if>
      <if test="teacherIntroduction != null">
        teacher_introduction = #{teacherIntroduction,jdbcType=VARCHAR},
      </if>
    </set>
    where teacher_uuid = #{teacherUuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cc.open.domain.Teacher">
    update t_teacher
    set user_id = #{userId,jdbcType=VARCHAR},
      teacher_sex = #{teacherSex,jdbcType=VARCHAR},
      teacher_birthday = #{teacherBirthday,jdbcType=TIMESTAMP},
      teacher_education = #{teacherEducation,jdbcType=VARCHAR},
      teacher_degree = #{teacherDegree,jdbcType=VARCHAR},
      teacher_major = #{teacherMajor,jdbcType=VARCHAR},
      teacher_title = #{teacherTitle,jdbcType=VARCHAR},
      academy_id = #{academyId,jdbcType=VARCHAR},
      teacher_introduction = #{teacherIntroduction,jdbcType=VARCHAR}
    where teacher_uuid = #{teacherUuid,jdbcType=VARCHAR}
  </update>
  <insert id="createTeacherInfo" parameterType="com.cc.open.vo.UserVO">
  	insert into t_teacher
  	set teacher_uuid = UUID(),
  	user_id = #{data.userId,jdbcType=VARCHAR}
  </insert>
  
  <select id="getTeacherInfoByUserId" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from t_teacher
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  
  <update id="updateTeacherInfoByUserId" parameterType="com.cc.open.domain.Teacher">
  	update t_teacher
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="teacherSex != null">
        teacher_sex = #{teacherSex,jdbcType=VARCHAR},
      </if>
      <if test="teacherBirthday != null">
        teacher_birthday = #{teacherBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="teacherEducation != null">
        teacher_education = #{teacherEducation,jdbcType=VARCHAR},
      </if>
      <if test="teacherDegree != null">
        teacher_degree = #{teacherDegree,jdbcType=VARCHAR},
      </if>
      <if test="teacherMajor != null">
        teacher_major = #{teacherMajor,jdbcType=VARCHAR},
      </if>
      <if test="teacherTitle != null">
        teacher_title = #{teacherTitle,jdbcType=VARCHAR},
      </if>
      <if test="academyId != null">
        academy_id = #{academyId,jdbcType=VARCHAR},
      </if>
      <if test="teacherIntroduction != null">
        teacher_introduction = #{teacherIntroduction,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <delete id="deleteTeacherByIds" parameterType="java.util.List">
  DELETE FROM t_teacher
  	WHERE
  	 user_id IN
  	 <foreach collection="list" item="userId" open="(" separator="," close=")">
            #{userId,jdbcType=VARCHAR}
     </foreach>
  </delete>
  <select id="findTeacherInfoByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_teacher
  	where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  
  <select id="getTeacherData" resultType="com.cc.open.vo.TeacherVO">
  	SELECT
		a.user_id AS userId,
		d.user_name AS NAME,
		a.teacher_sex AS sex,
		a.teacher_birthday AS birthday,
		a.teacher_education AS education,
		a.teacher_degree AS degree,
		a.teacher_major AS major,
		a.teacher_title AS title,
		a.academy_id AS academyId,
		b.academy_name AS academyName,
		a.teacher_introduction AS introduction
	FROM
		t_teacher a,
		t_academy b,
		t_user_course c,
		t_user_info d
	WHERE
		c.user_id = d.user_uuid
	AND a.user_id = c.user_id
	AND b.academy_id = a.academy_id
	AND c.course_id = #{courseId,jdbcType=VARCHAR}
  </select>
</mapper>