<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cc.open.dao.TeachingReformMapper">
  <resultMap id="BaseResultMap" type="com.cc.open.domain.TeachingReform">
    <result column="teaching_reform_uuid" jdbcType="VARCHAR" property="teachingReformUuid" />
    <result column="teaching_reform_title" jdbcType="VARCHAR" property="teachingReformTitle" />
    <result column="teaching_reform_published" jdbcType="VARCHAR" property="teachingReformPublished" />
    <result column="teaching_reform_url" jdbcType="VARCHAR" property="teachingReformUrl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    teaching_reform_uuid, teaching_reform_title, teaching_reform_published, teaching_reform_url
  </sql>
  <select id="selectByExample" parameterType="com.cc.open.domain.TeachingReformExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_teaching_reform
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.cc.open.domain.TeachingReformExample">
    delete from t_teaching_reform
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cc.open.domain.TeachingReform">
    insert into t_teaching_reform (teaching_reform_uuid, teaching_reform_title, 
      teaching_reform_published, teaching_reform_url
      )
    values (#{teachingReformUuid,jdbcType=VARCHAR}, #{teachingReformTitle,jdbcType=VARCHAR}, 
      #{teachingReformPublished,jdbcType=VARCHAR}, #{teachingReformUrl,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cc.open.domain.TeachingReform">
    insert into t_teaching_reform
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teachingReformUuid != null">
        teaching_reform_uuid,
      </if>
      <if test="teachingReformTitle != null">
        teaching_reform_title,
      </if>
      <if test="teachingReformPublished != null">
        teaching_reform_published,
      </if>
      <if test="teachingReformUrl != null">
        teaching_reform_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teachingReformUuid != null">
        #{teachingReformUuid,jdbcType=VARCHAR},
      </if>
      <if test="teachingReformTitle != null">
        #{teachingReformTitle,jdbcType=VARCHAR},
      </if>
      <if test="teachingReformPublished != null">
        #{teachingReformPublished,jdbcType=VARCHAR},
      </if>
      <if test="teachingReformUrl != null">
        #{teachingReformUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cc.open.domain.TeachingReformExample" resultType="java.lang.Long">
    select count(*) from t_teaching_reform
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_teaching_reform
    <set>
      <if test="record.teachingReformUuid != null">
        teaching_reform_uuid = #{record.teachingReformUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.teachingReformTitle != null">
        teaching_reform_title = #{record.teachingReformTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.teachingReformPublished != null">
        teaching_reform_published = #{record.teachingReformPublished,jdbcType=VARCHAR},
      </if>
      <if test="record.teachingReformUrl != null">
        teaching_reform_url = #{record.teachingReformUrl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_teaching_reform
    set teaching_reform_uuid = #{record.teachingReformUuid,jdbcType=VARCHAR},
      teaching_reform_title = #{record.teachingReformTitle,jdbcType=VARCHAR},
      teaching_reform_published = #{record.teachingReformPublished,jdbcType=VARCHAR},
      teaching_reform_url = #{record.teachingReformUrl,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>